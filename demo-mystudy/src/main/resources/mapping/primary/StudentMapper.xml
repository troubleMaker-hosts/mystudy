<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.primary.StudentMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.model.Student">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="status" jdbcType="VARCHAR" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, age, sex, create_time, create_user, update_time, update_user, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByNameTest" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
--     表名 只能使用 $
    from ${tableName}
    where name like  concat('%', #{name}, '%')
  </select>

  <select id="findStudentByCondition" resultType="com.example.demo.model.Student">
    select
    <include refid="Base_Column_List" />

    from student
    <where>
      <if test="name != null">
      --    orcal 才支持 || 拼接字符串, mysql 只支持 concat(...)函数, orcal concat()函数只支持 两个参数,
      --    mysql不限参数 (mybatis 中 sql 注释 中 不能有占位符)
        name like  concat('%', #{name}, '%')
      </if>
      <if test="age != null">
        and age = #{age}
      </if>
      <if test="sex != null and sex != ''">
        and sex = #{sex}
      </if>
    </where>
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from student
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insertSelective" parameterType="com.example.demo.model.Student">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
    on duplicate key
    update
    <trim suffixOverrides=",">
      <if test="name != null">
        name = values(name),
      </if>
      <if test="age != null">
        age = values(age),
      </if>
      <if test="sex != null">
        sex = values(sex),
      </if>
      <if test="createTime != null">
        createTime = values(createTime),
      </if>
      <if test="createUser != null">
        createUser = values(createUser),
      </if>
      <if test="updateTime != null">
        updateTime = values(updateTime),
      </if>
      <if test="updateUser != null">
        updateUser = values(updateUser),
      </if>
      <if test="status != null">
        status = values(status),
      </if>
     </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.Student">
    update student
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

    <update id="updateByName">
      update student
      <set>
        <if test="age != null">
          age = #{age,jdbcType=INTEGER},
        </if>
        <if test="sex != null">
          sex = #{sex,jdbcType=VARCHAR},
        </if>
        <if test="createTime != null">
          create_time = #{createTime,jdbcType=TIMESTAMP},
        </if>
        <if test="createUser != null">
          create_user = #{createUser,jdbcType=VARCHAR},
        </if>
        <if test="updateTime != null">
          update_time = #{updateTime,jdbcType=TIMESTAMP},
        </if>
        <if test="updateUser != null">
          update_user = #{updateUser,jdbcType=VARCHAR},
        </if>
        <if test="status != null">
          status = #{status,jdbcType=VARCHAR},
        </if>
      </set>
        where name = #{name,jdbcType=VARCHAR}
    </update>
</mapper>