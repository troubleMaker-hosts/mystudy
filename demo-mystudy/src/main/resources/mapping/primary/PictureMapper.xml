<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.primary.PictureMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.model.Picture">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="picture_name" jdbcType="VARCHAR" property="pictureName" />
    <result column="picture_type" jdbcType="VARCHAR" property="pictureType" />
    <result column="storage_type" jdbcType="INTEGER" property="storageType" />
    <result column="tftp_url" jdbcType="VARCHAR" property="tftpUrl" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_valid" jdbcType="INTEGER" property="isValid" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.example.demo.model.Picture">
    <result column="picture_content" jdbcType="LONGVARBINARY" property="pictureContent" />
  </resultMap>
  <sql id="Base_Column_List">
    id, picture_name, picture_type, storage_type, tftp_url, create_user, create_time, 
    update_user, update_time, is_valid, remarks
  </sql>
  <sql id="Blob_Column_List">
    picture_content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from picture
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from picture
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.demo.model.Picture">
    insert into picture (id, picture_name, picture_type, 
      storage_type, tftp_url, create_user, 
      create_time, update_user, update_time, 
      is_valid, remarks, picture_content
      )
    values (#{id,jdbcType=INTEGER}, #{pictureName,jdbcType=VARCHAR}, #{pictureType,jdbcType=VARCHAR}, 
      #{storageType,jdbcType=INTEGER}, #{tftpUrl,jdbcType=VARCHAR}, #{createUser,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{isValid,jdbcType=INTEGER}, #{remarks,jdbcType=VARCHAR}, #{pictureContent,jdbcType=LONGVARBINARY}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.model.Picture">
    insert into picture
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="pictureName != null">
        picture_name,
      </if>
      <if test="pictureType != null">
        picture_type,
      </if>
      <if test="storageType != null">
        storage_type,
      </if>
      <if test="tftpUrl != null">
        tftp_url,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isValid != null">
        is_valid,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="pictureContent != null">
        picture_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="pictureName != null">
        #{pictureName,jdbcType=VARCHAR},
      </if>
      <if test="pictureType != null">
        #{pictureType,jdbcType=VARCHAR},
      </if>
      <if test="storageType != null">
        #{storageType,jdbcType=INTEGER},
      </if>
      <if test="tftpUrl != null">
        #{tftpUrl,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isValid != null">
        #{isValid,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="pictureContent != null">
        #{pictureContent,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.Picture">
    update picture
    <set>
      <if test="pictureName != null">
        picture_name = #{pictureName,jdbcType=VARCHAR},
      </if>
      <if test="pictureType != null">
        picture_type = #{pictureType,jdbcType=VARCHAR},
      </if>
      <if test="storageType != null">
        storage_type = #{storageType,jdbcType=INTEGER},
      </if>
      <if test="tftpUrl != null">
        tftp_url = #{tftpUrl,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isValid != null">
        is_valid = #{isValid,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="pictureContent != null">
        picture_content = #{pictureContent,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.demo.model.Picture">
    update picture
    set picture_name = #{pictureName,jdbcType=VARCHAR},
      picture_type = #{pictureType,jdbcType=VARCHAR},
      storage_type = #{storageType,jdbcType=INTEGER},
      tftp_url = #{tftpUrl,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_valid = #{isValid,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR},
      picture_content = #{pictureContent,jdbcType=LONGVARBINARY}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.model.Picture">
    update picture
    set picture_name = #{pictureName,jdbcType=VARCHAR},
      picture_type = #{pictureType,jdbcType=VARCHAR},
      storage_type = #{storageType,jdbcType=INTEGER},
      tftp_url = #{tftpUrl,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_valid = #{isValid,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <update id="truncateTable">
      truncate ${tableName}
    </update>
</mapper>